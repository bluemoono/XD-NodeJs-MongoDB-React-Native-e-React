[{"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\index.js":"1","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Home\\index.js":"2","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Header\\index.js":"3","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Home\\style.js":"4","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Header\\style.js":"5","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Footer\\index.js":"6","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Footer\\style.js":"7","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\FilterCard\\index.js":"8","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\FilterCard\\style.js":"9","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\TaskCard\\index.js":"10","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\TaskCard\\style.js":"11","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\services\\api.js":"12","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\utils\\typeIcons.js":"13","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Task\\index.js":"14","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Task\\style.js":"15","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\routes\\index.js":"16","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\QrCode\\index.js":"17","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\QrCode\\style.js":"18","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\utils\\IsConnected.js":"19"},{"size":207,"mtime":1612075415599,"results":"20","hashOfConfig":"21"},{"size":2628,"mtime":1612120481147,"results":"22","hashOfConfig":"21"},{"size":1792,"mtime":1612120552099,"results":"23","hashOfConfig":"21"},{"size":878,"mtime":1612076079393,"results":"24","hashOfConfig":"21"},{"size":1411,"mtime":1612119756904,"results":"25","hashOfConfig":"21"},{"size":233,"mtime":1611551832990,"results":"26","hashOfConfig":"21"},{"size":339,"mtime":1611725168180,"results":"27","hashOfConfig":"21"},{"size":354,"mtime":1611636278763,"results":"28","hashOfConfig":"21"},{"size":590,"mtime":1611636244899,"results":"29","hashOfConfig":"21"},{"size":742,"mtime":1612112720029,"results":"30","hashOfConfig":"21"},{"size":921,"mtime":1612112226908,"results":"31","hashOfConfig":"21"},{"size":120,"mtime":1611727778896,"results":"32","hashOfConfig":"21"},{"size":657,"mtime":1611804138419,"results":"33","hashOfConfig":"21"},{"size":5175,"mtime":1612120717737,"results":"34","hashOfConfig":"21"},{"size":2300,"mtime":1611892840280,"results":"35","hashOfConfig":"21"},{"size":611,"mtime":1612114428039,"results":"36","hashOfConfig":"21"},{"size":1512,"mtime":1612120400427,"results":"37","hashOfConfig":"21"},{"size":1222,"mtime":1612117891110,"results":"38","hashOfConfig":"21"},{"size":91,"mtime":1612118629502,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lsls8m",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\index.js",[],["82","83"],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Home\\index.js",["84"],"import React, {useState, useEffect} from 'react';\r\nimport * as S from './style';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport isConnected from '../../utils/IsConnected';\r\n\r\n//COMPONENTES\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\n\r\nfunction Home() {\r\n    const [filterActived, setFilterActived] = useState('all');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n    async function loadTasks(){\r\n        await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n        .then(response =>{\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    function Notification(){\r\n        setFilterActived('late');\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadTasks();\r\n        if(!isConnected){\r\n            setRedirect(true);\r\n        }\r\n    }, [filterActived]);\r\n\r\n    return ( \r\n    <S.Container>\r\n        {redirect && <Redirect to=\"/qrcode\" />}\r\n        <Header clickNotification={Notification}/>\r\n        \r\n        <S.FilterArea>\r\n            <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n            <FilterCard actived={filterActived === 'all'} title=\"Todos\"/>\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n            <FilterCard actived={filterActived === 'today'} title=\"Hoje\"/>\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n            <FilterCard actived={filterActived === 'week'}  title=\"Semana\"/>\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\r\n            <FilterCard actived={filterActived === 'month'} title=\"Mês\"/>\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n            <FilterCard actived={filterActived === 'year'} title=\"Ano\"/>\r\n            </button>\r\n            \r\n        </S.FilterArea>\r\n\r\n        <S.Title>\r\n            <h2>{filterActived === 'late'? 'TAREFAS ATRASADAS': 'TAREFAS'}</h2>\r\n        </S.Title>\r\n\r\n        <S.Content>\r\n            {\r\n            tasks.map(task => (\r\n            <Link to={`/task/${task._id}`}>\r\n                <TaskCard type={task.type} title={task.title} when={task.when} done={task.done} />\r\n            </Link>\r\n            ))\r\n            }\r\n        </S.Content>\r\n\r\n        <Footer/>\r\n    </S.Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Header\\index.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Home\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Header\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Footer\\index.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\Footer\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\FilterCard\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\TaskCard\\index.js",["85","86"],"import React, {useMemo} from 'react';\r\nimport {format} from 'date-fns';\r\nimport * as S from './style';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nfunction TaskCard({type, title, when, done}) {\r\n    const date = useMemo(() => format(new Date(when), 'dd/MM/yyyy'));\r\n    const hour = useMemo(() => format(new Date(when), 'HH:mm'));\r\n\r\n    return (\r\n        <S.Container done={done}>\r\n            <S.TopCard>\r\n                <img src={typeIcons[type]} alt=\"Icone do Tarefa\"/>\r\n                <h2>{title}</h2>\r\n            </S.TopCard>\r\n            <S.BottomCard>\r\n                <strong>{date}</strong>\r\n                <span>{hour}</span>\r\n            </S.BottomCard>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\components\\TaskCard\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\services\\api.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\utils\\typeIcons.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Task\\index.js",["87","88","89","90"],"import React, {useState, useEffect} from 'react';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as S from './style';\r\n\r\nimport api from '../../services/api';\r\nimport isConnected from '../../utils/IsConnected';\r\n\r\n//COMPONENTES\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport TypeIcons from '../../utils/typeIcons';\r\n\r\nimport calendar from '../../assets/calendrio-p.png';\r\nimport clock from '../../assets/relogio-p.png';\r\n\r\nfunction Task({match}) {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [type, setType] = useState();\r\n    const [id, setId] = useState();\r\n    const [done, setDone] = useState(false);\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [date, setDate] = useState();\r\n    const [hour, setHour] = useState();\r\n\r\n    async function LoadTaskDatails(){\r\n        await  api.get(`/task/${match.params.id}`)\r\n        .then(response =>{\r\n            setType(response.data.type)\r\n            setTitle(response.data.title)\r\n            setDescription(response.data.description)\r\n            setDate(format (new Date(response.data.when), 'yyyy-MM-dd'))\r\n            setHour(format (new Date(response.data.when), 'HH:mm'))\r\n            setDone(response.data.done)\r\n        });\r\n    }\r\n\r\n    async function save(){\r\n        //Validação de dados\r\n        if(!type){\r\n            return alert(\"Você precisa informar o tipo da tarefa\")\r\n        } else if(!title){\r\n            return alert(\"Você precisa informar o título da tarefa\")\r\n        } else if(!description){\r\n            return alert(\"Você precisa informar o descrição da tarefa\")\r\n        } else if(!date){\r\n            return alert(\"Você precisa informar o data da tarefa\")\r\n        } else if(!hour){\r\n            return alert(\"Você precisa informar o hora da tarefa\")\r\n        }\r\n\r\n\r\n        if(match.params.id){\r\n            await api.put(`/task/${match.params.id}`, {\r\n                macaddress: isConnected,\r\n                type,\r\n                title,\r\n                description,\r\n                when: `${date}T${hour}:00.000`\r\n            }).then(\r\n                setRedirect(true)\r\n                ).catch();\r\n            } else {\r\n                await api.post('/task', {\r\n                    macaddress: isConnected,\r\n                    type,\r\n                    title,\r\n                    description,\r\n                    when: `${date}T${hour}:00.000`\r\n                }).then(\r\n                setRedirect(true)\r\n            ).catch();\r\n        }\r\n    }\r\n\r\n    async function remove(){\r\n        const res = window.confirm('Deseja realmente excluir a tarefa?')\r\n        if(res == true){\r\n            await api.delete(`/task/${match.params.id}`)\r\n            .then(() => setRedirect(true));\r\n        } else {\r\n            alert(\"mantido :D\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!isConnected){\r\n            setRedirect(true);\r\n        }\r\n        LoadTaskDatails();\r\n    }, []);\r\n\r\n    return ( \r\n    <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n        <Header/>\r\n\r\n        <S.Form>\r\n            <S.TypeIcons>\r\n                {\r\n                    TypeIcons.map((icon, index) => (\r\n                        index > 0 && \r\n                        <button type=\"button\" onClick={()=> setType(index)}>\r\n                            <img src={icon} alt=\"Tipo de Tarefas\" className ={type && type !== index && 'inative'} />\r\n                        </button>\r\n                    ))\r\n                }\r\n            </S.TypeIcons>\r\n\r\n            <S.Input>\r\n                <span>Título</span>\r\n                <input type=\"text\" placeholder=\"Título da Tarefa\" onChange={e => setTitle(e.target.value)} value={title}></input>\r\n            </S.Input>\r\n\r\n            <S.TextArea>\r\n                <span>Descrição</span>\r\n                <textarea rows={5} placeholder=\"Destalhes da Tarefa\" onChange={e => setDescription(e.target.value)} value={description}></textarea>\r\n            </S.TextArea>\r\n\r\n            <S.Input>\r\n                <span>Data</span>\r\n                <input type=\"date\" placeholder=\"Data da Tarefa\" onChange={e => setDate(e.target.value)} value={date}></input>\r\n                <img src={calendar} alt=\"Calendário\" />\r\n            </S.Input>\r\n\r\n            <S.Input>\r\n                <span>Hora</span>\r\n                <input type=\"time\" placeholder=\"Hora da Tarefa\" onChange={e => setHour(e.target.value)} value={hour}></input>\r\n                <img src={clock} alt=\"Relógio\" />\r\n            </S.Input>\r\n\r\n            <S.Options>\r\n                <div>\r\n                    <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)} />\r\n                    <span>CONCLUÍDO</span>\r\n                </div>\r\n\r\n                {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n            </S.Options>\r\n\r\n            <S.Save>\r\n                <button type=\"button\" onClick={save}>SALVAR</button>\r\n            </S.Save>\r\n        </S.Form>\r\n\r\n\r\n        <Footer/>\r\n    </S.Container>\r\n    )\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\Task\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\routes\\index.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\QrCode\\index.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\views\\QrCode\\style.js",[],"C:\\Users\\mikka\\OneDrive\\Área de Trabalho\\Udemy\\XD, NodeJs, MongoDB, React Native e React\\Frontend\\Web\\web\\src\\utils\\IsConnected.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":38,"column":8,"nodeType":"97","endLine":38,"endColumn":23,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":8,"column":18,"nodeType":"100","endLine":8,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":9,"column":18,"nodeType":"100","endLine":9,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":21,"column":12,"nodeType":"100","messageId":"103","endLine":21,"endColumn":14},{"ruleId":"101","severity":1,"message":"104","line":21,"column":16,"nodeType":"100","messageId":"103","endLine":21,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":80,"column":16,"nodeType":"107","messageId":"108","endLine":80,"endColumn":18},{"ruleId":"95","severity":1,"message":"109","line":93,"column":8,"nodeType":"97","endLine":93,"endColumn":10,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'id' is assigned a value but never used.","unusedVar","'setId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'LoadTaskDatails'. Either include it or remove the dependency array.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"119","text":"120"},"Update the dependencies array to be: [LoadTaskDatails]",{"range":"121","text":"122"},[1024,1039],"[filterActived, loadTasks]",[3054,3056],"[LoadTaskDatails]"]